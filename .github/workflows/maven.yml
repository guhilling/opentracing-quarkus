# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI with Maven and Docker

on:
  push:
  pull_request:

jobs:
  build:
    name: Build - Maven and Docker
    runs-on: ubuntu-latest
    env:
      HELLO_REPO: quay.io/ghilling/quarkus-hello:latest
      WORLD_REPO: quay.io/ghilling/quarkus-world:latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Build Docker image (hello)
        run: cd quarkus-hello && docker build -f src/main/docker/Dockerfile -t ${HELLO_REPO} .
      - name: Build Docker image (world)
        run: cd quarkus-world && docker build -f src/main/docker/Dockerfile -t ${WORLD_REPO} .
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags:
            - ${{ env.HELLO_REPO }}
            - ${{ env.WORLD_REPO }}
          outputs: type=docker,dest=/tmp/images.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: images
          path: /tmp/images.tar

  publish:
    name: Publish Docker Hub
    runs-on: ubuntu-latest
    env:
      HELLO_REPO: quay.io/ghilling/quarkus-hello:latest
      WORLD_REPO: quay.io/ghilling/quarkus-world:latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: images
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/images.tar
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ROBOT_USER }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      - name: Publish Docker image (hello)
        run: docker push ${HELLO_REPO}
      - name: Publish Docker image (world)
        run: docker push ${WORLD_REPO}
